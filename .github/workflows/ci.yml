name: CI
on:
    push:
        branches:
        - master
    pull_request:
        paths-ignore:
        - 'doc/*.rst'
    schedule:
        - cron:  '17 3 * * 0'

jobs:
    flake8:
        name: Flake8
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/prepare-and-run-flake8.sh
                . ./prepare-and-run-flake8.sh "$(basename $GITHUB_REPOSITORY)" test examples benchmarks

    docs:
        name: Documentation
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            run: |
                CONDA_ENVIRONMENT=.test-conda-env-py3.yml
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/ci-support.sh
                . ci-support.sh
                build_py_project_in_conda_env
                build_docs

    pytest:
        name: Conda Pytest
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            run: |
                grep -v symengine .test-conda-env-py3.yml > .test-conda-env.yml
                CONDA_ENVIRONMENT=.test-conda-env.yml
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/build-and-test-py-project-within-miniconda.sh
                . ./build-and-test-py-project-within-miniconda.sh

    pytest_symengine:
        name: Conda Pytest Symengine
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            run: |
                CONDA_ENVIRONMENT=.test-conda-env-py3.yml
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/build-and-test-py-project-within-miniconda.sh
                . ./build-and-test-py-project-within-miniconda.sh

    examples:
        name: Conda Examples
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            run: |
                grep -v symengine .test-conda-env-py3.yml > .test-conda-env.yml
                CONDA_ENVIRONMENT=.test-conda-env.yml
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/ci-support.sh
                . ci-support.sh
                EXTRA_INSTALL="pyvisfile scipy"
                build_py_project_in_conda_env
                run_examples


    downstream_tests:
        strategy:
            matrix:
                downstream_project: [pytential]
        name: Tests for downstream project ${{ matrix.downstream_project }}
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            env:
                DOWNSTREAM_PROJECT: ${{ matrix.downstream_project }}
            run: |
                git clone "https://github.com/inducer/$DOWNSTREAM_PROJECT.git"
                cd "$DOWNSTREAM_PROJECT"
                echo "*** $DOWNSTREAM_PROJECT version: $(git rev-parse --short HEAD)"
                sed -i "/egg=sumpy/ c git+file://$(readlink -f ..)#egg=sumpy" requirements.txt
                export CONDA_ENVIRONMENT=.test-conda-env-py3.yml
                # Avoid slow or complicated tests in downstream projects
                export PYTEST_ADDOPTS="-k 'not (slowtest or octave or mpi)'"
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/ci-support.sh
                . ./ci-support.sh
                build_py_project_in_conda_env
                test_py_project

# vim: sw=4
