[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sumpy"
version = "2024.0"
description = "Fast summation in Python"
readme = "README.rst"
license = "MIT"
authors = [
    { name = "Andreas Kloeckner", email = "inform@tiker.net" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]
dependencies = [
    "arraycontext>=2021.1",
    "boxtree>=2023.1",
    "constantdict>=2024.4",
    "loopy>=2024.1",
    "numpy",
    "pyopencl>=2022.1",
    "pytools>=2024.1",
    "pymbolic>=2024.2",
    "sympy>=0.7.2",
]

[dependency-groups]
dev = [
    {include-group = "doc"},
    {include-group = "test"},
    {include-group = "lint"},
]
lint = [
    "pylint",
    # https://github.com/astral-sh/ruff/issues/16943
    "ruff!=0.11.1,!=0.11.2",
]
doc = [
    "furo",
    "sphinx-copybutton",
    "sphinx>=4",
]
test = [
    "pytest",
]

[project.optional-dependencies]
fmmlib = [
    "pyfmmlib>=2023.1",
]
symengine = [
    "symengine>=0.9.0",
]
pyvkfft = [
    "pyvkfft>=2024.1",
]

[project.urls]
Documentation = "https://documen.tician.de/sumpy"
Repository = "https://github.com/inducer/sumpy"

[tool.ruff]
preview = true

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "G",   # flake8-logging-format
    "I",   # flake8-isort
    "N",   # pep8-naming
    "NPY", # numpy
    "Q",   # flake8-quotes
    "RUF", # ruff
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "W",   # pycodestyle
    "TC",
]
extend-ignore = [
    "C90",  # McCabe complexity
    "E221", # multiple spaces before operator
    "E226", # missing whitespace around arithmetic operator
    "E402", # module-level import not at top of file
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = [
    "arraycontext",
    "loopy",
    "pymbolic",
    "pyopencl",
    "pytools",
]
known-local-folder = [
    "sumpy",
]
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"doc/**/*.py" = ["I002"]
"examples/**/*.py" = ["I002"]

[tool.typos.default]
extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*spellchecker:\\s*disable-line$"
]

[tool.typos.default.extend-words]
# short for multi-indices
mis = "mis"
# short for n-dimensional
nd = "nd"
# short for Theorem
thm = "thm"

[tool.typos.files]
extend-exclude = [
  "contrib/*/*.ipynb",
  "notes/*/*.eps",
]

[tool.pytest.ini_options]
markers = [
    "mpi: tests distributed FMM",
]

[tool.basedpyright]
reportImplicitStringConcatenation = "none"
reportUnnecessaryIsInstance = "none"
reportUnusedCallResult = "none"
reportExplicitAny = "none"
reportPrivateUsage = "none"

# Multiple reasons for this:
# - make_subst_func is reported as having an incomplete type (but only in CI?)
# - numpy scalar types are reported as incomplete (because of "any" precision)
reportUnknownVariableType = "none"

reportUnreachable = "hint"
reportUnnecessaryComparison = "hint"
reportPossiblyUnboundVariable = "hint"

# This reports even cycles that are qualified by 'if TYPE_CHECKING'. Not what
# we care about at this moment.
# https://github.com/microsoft/pyright/issues/746
reportImportCycles = "none"

pythonVersion = "3.10"
pythonPlatform = "All"

exclude = [
    "doc",
    "build",
    "benchmarks",
    "contrib",
    ".conda-root",
]

[[tool.basedpyright.executionEnvironments]]
root = "test"
reportUnknownArgumentType = "none"
reportUnknownVariableType = "none"
reportUnknownParameterType = "hint"
reportMissingParameterType = "none"
reportAttributeAccessIssue = "hint"
reportMissingTypeStubs = "hint"
reportUnknownLambdaType = "hint"
reportUnusedImport = "hint"
reportUnusedParameter = "none"
reportUnannotatedClassAttribute = "hint"
reportAny = "hint"
reportUnknownMemberType = "hint"
reportMissingImports = "none"
reportArgumentType = "hint"
reportOperatorIssue = "hint"

[[tool.basedpyright.executionEnvironments]]
root = "examples"
reportUnknownArgumentType = "none"
reportUnknownVariableType = "none"
reportUnknownParameterType = "hint"
reportMissingParameterType = "none"
reportAttributeAccessIssue = "hint"
reportMissingTypeStubs = "hint"
reportUnknownLambdaType = "hint"
reportUnusedImport = "hint"
reportUnusedParameter = "none"
reportUnannotatedClassAttribute = "hint"
reportAny = "hint"
reportUnknownMemberType = "hint"
reportMissingImports = "none"
reportArgumentType = "hint"
reportOperatorIssue = "hint"

